FORMAT: 1A
HOST: http://localhost:3000/

# GZApi

В этой документации описаны все API методы приложения, необходимые используемые для визуального отображения.

Все методы веб сервера работают ТОЛЬКО в формате JSON

Большинство методов, предназначенных для работы с ресурсами, соответсвуют спецификации JSON API. Такие методы имеют тип данных `application/vnd.api+json` и отличительную структуру

Подробнее:
https://braintent.gitbooks.io/goznak-docs/content/controllers.html

## Data Structures

## UserAttributes (object)
+ account_name: 'ACCOUNT\test' (string, required)

## UserAuthAttributes (object)
+ Include: UserAttributes
+ password: sekr3t (string)

## EmployeeAttributes
+ first_name: `Сергей`
+ last_name: `Васильевич`
+ middle_name: `Иванови`
+ display_string: `Васильев С. И.`

## EmployeeRelationships
+ department (object)
  + data (DepartmentIdentifier)

  
## EmployeeIdentifier
+ data (object)
    + id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA`
    + type: `employees` (string, required)

## Employee (object)
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA`
+ type: `employees` (string, required)
+ attributes (EmployeeAttributes)
+ relationships (EmployeeRelationships)

## TaskCardCommentsIdentifier
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA`
+ type: task_card_comments (string, required)

## TaskCardCommentCreateParams
+ data
    + type: task_card_comments (string, required)
    + attributes
        + content: `Текст комментария` (string, required)


## TaskCardCommentWithAuthor
+ id:`AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA` (string, required)
+ type: "task_card_comments" (string, required)
+ attributes (object)
    + content: `Текст комментария` (string, required)
    + creation_date: `Дата создания комментария` (string, required)
+ relationships
    + author (EmployeeIdentifier)
     

## TaskCardIdentifier
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA`
+ type: task_cards (string, required)

## TaskCardPerformParams
+ data
    + content: `Тест заполненности полей` (string, required)
    + end_date: `2007-01-01 000000 UTC` (string, required)
    + relationships (TaskCardCreateRelationships)

## TaskCardCreateRelationships
+ author (EmployeeIdentifier)
+ controller (EmployeeIdentifier)
+ performer (EmployeeIdentifier)
+ co_performers (array[EmployeeIdentifier, EmployeeIdentifier])



## TaskCardShowAttributes
+ description: `Задание на исполнение Поручение от 09.09.2016` (string, required)
+ content: `Тест заполненности полей` (string, required)
+ state_id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA` (string, required)
+ state_name: `Не начато` (string, required)
+ state_default_name: `Started` (string, required)
+ start_date: `2007-01-01 000000 UTC` (string, required)
+ end_date: `2007-01-01 000000 UTC` (string, required)

## TaskCardShowRelationships
+ author (EmployeeIdentifier)
+ controller (EmployeeIdentifier)
+ comments (array[TaskCardCommentsIdentifier, TaskCardCommentsIdentifier])
+ cycles (array[])
+ performer (EmployeeIdentifier)
+ co_performers (array[EmployeeIdentifier, EmployeeIdentifier])


## DepartmentIdentifier
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA`
+ type: departments (string, required)

## TaskAvailableActions
+ name: `Default action name. May be eng/rus` (string, required)
+ name_ru: `Имя действия на русском` (string)
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA` (string, required)

## TaskOperationsPattern
+ name: `Default operation name. May be eng/rus` (string, required)
+ local_name: `Имя операции на русском` (string)
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA` (string, required)


## CardRoles
+ name: `Название роли` (string, required)
+ id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA` (string, required)

## TaskCardWithActionsMeta
+ data (object)
    + id: `AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA` (string, required)
    + type: 'task_cards' (string, required)
    + attributes (TaskCardShowAttributes)
    + relationships (TaskCardShowRelationships)
+ included (array[Employee, Employee, DepartmentIdentifier])
+ meta (object)
    + possible_actions (array[TaskAvailableActions, TaskAvailableActions], required)
    + common_roles (array[CardRoles, CardRoles], required)
    + card_roles (array[CardRoles, CardRoles], required)
    + allowed_operations (array[TaskOperationsPattern, TaskOperationsPattern], required)



# Group Пользователи

## Сессии [/users/sign_in]
#### Создать сессию [POST]

+ Request (application/json)

        {
            "account_name": "DOCSVISION\\dv",
            "password": "12345678"
        }

+ Response 201 (application/json)

    + Headers

            Access-Token:Ly2s3IWFvEJWNSlgr0BlSg
            Client:57sggIs-NRwfnv2oe5dKcg
            Etag:W/"43c2f9eabb3ecef557ff77804a90f79b"
            Expiry:1471867003
            Token-Type:Bearer
            Uid:5

    + Body

            {
                "data":{
                    "id":1,
                    "employee_id":"d70f6f76-f047-4daf-9fac-72acb68f0338"
                }
            }
            

# Group Администраторы

## Авторизация [/admins/sign_in]

#### Создать сессию [POST]

+ Request (application/json)

        {
            "login": "superadmin",
            "password": "12345678"
        }

+ Response 201 (application/json)

    + Headers

            Access-Token:4yzt0hS8ZPTeZWvCrO5dQQ
            Client:G24hRw_GOnm-vDSP14VxVw
            Etag:W/"a0c9026fb660a244f8b76750bc11942d"
            Expiry:1471867013
            Token-Type:Bearer
            Uid:1

    + Body

            {
                "data":{
                    "login": "superadmin",
                    "id": "1"
                }
            }
            

# Group Задания

## Список заданий [/task_cards/?list={list}]

- `list` ( **String**, *required* )
Тип листа, который необходимо получить


### Получить список заданий по типу [GET]
#### Описание
Ответ содержит список заданий. 
Для каждого задания кроме основной информации посылаются необходимые для отображения зависимости, а именно - лист сотрудников, являющихся участниками задания.

+ Request  (application/vnd.api+json)

    + Headers

            Authorization: Bearer <ACCESS_TOKEN>

+ Response 200 (application/vnd.api+json)

        {
            [ 
                data:{
                    id: UUID,
                    attributes: {
                        state: "состояние"
                    },
                    relationships: {
                        author: {
                            data: { type: "employee", id: "UUID" }
                        }
                    }
                },
                included: [
                    {
                        type: "employee",
                        id: UUID,
                        attributes: {
                            display_string: "Petrosyan K. V."
                        }
                    }            
                }
            ]
        }

## Задание [/task_cards/{id}/]

- `id` ( **String**, *required* )
Уникальный ID задания (`InstanceID` карточки)


### Получить информацию по заданию [GET]
#### Описание
При открытии еденичного задания информация схожа с той, что выдается к списку заданий, дополненная следующими элементами:
* Список возможных действий над поручением
* Список доступных прав для текущего пользователя
* Список комментариев
* Ход исполнения (?)

+ Request (application/vnd.api+json)

    + Headers

            Authorization: Bearer <ACCESS_TOKEN>

+ Response 200 (application/vnd.api+json)

    + Attributes (TaskCardWithActionsMeta)


### Удаление [DELETE]
#### Описание
Допустимо только для шаблона

+ Request (application/vnd.api+json)

        {
        }

+ Response 204 (application/vnd.api+json)



## Комментирование [/task_cards/{id}/comments]

### Комментирование [POST]

+ Request (application/vnd.api+json)

    + Attributes (TaskCardCommentCreateParams)
        
+ Response 201 (application/vnd.api+json)

    + Headers

            Access-Token:4yzt0hS8ZPTeZWvCrO5dQQ
            Client:G24hRw_GOnm-vDSP14VxVw
            Etag:W/"a0c9026fb660a244f8b76750bc11942d"
            Expiry:1471867013
            Token-Type:Bearer
            Uid:1

    + Body

    + Attributes
        + data (TaskCardCommentWithAuthor)
        + included (Employee)

## Новое задание [/tasks/]

### Создание шаблона [POST]

+ Request (application/vnd.api+json)

+ Response 201 (application/vnd.api+json)

    + Headers

    + Attributes (TaskCardIdentifier)
            

### Отправка в работу [/task_cards/{id}/send_assignment_to_perform]

- `id` ( **String**, *required* )
Уникальный ID задания (`InstanceID` карточки)


#### Проекта [PATCH]
+ Request (application/vnd.api+json)

    + Attributes (TaskCardPerformParams)

+ Response 200 (application/vnd.api+json)

    + Headers

    + Attributes (TaskCardWithActionsMeta)
    
### Действия [/tasks/id/action]

#### Вызов действия DV [PATCH]
+ Request (application/json)

        {
            action: action_id
        }

+ Response 200 (application/json)

    + Headers

    + Body


### Файлы задания [/tasks/id/file]

#### Добавление [POST]

+ Request (application/json)

        { file: file(сделать) }

+ Response 201 (application/json)

    + Headers

    + Body

            {
                data:{
                    id: UUID,
                    name: filename
                }
            }

### Файл задания [/tasks/id/file/file_id]
#### Удаление [DELETE]

+ Request (application/json)

+ Response 200 (application/json)

    + Headers

    + Body

            {
                data:{
                    id: UUID,
                    name: filename
                }